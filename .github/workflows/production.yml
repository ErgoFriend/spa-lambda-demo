name: Deploy to production
on:
  workflow_run:
    workflows: ["build and test"]
    branches:
      - master
    types:
      - completed
jobs:
  api:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: deploy SAM
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    steps:
    - uses: actions/checkout@v2
    - uses: falnyr/aws-sam-deploy-action@v1.2.1
    # https://github.com/marketplace/actions/aws-sam-deploy
      env:
        TEMPLATE: 'api/template.yaml'
        AWS_STACK_NAME: demo-api
        AWS_REGION: 'ap-northeast-1'
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEPLOY_BUCKET: ${{ secrets.AWS_DEPLOY_BUCKET }}

  spa:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: build and deploy to s3
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: spa
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '12'
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}--
    - run: npm install
    - run: npm test
    - run: npm run build
    - uses: reggionick/s3-deploy@v3
    # https://github.com/marketplace/actions/s3-deploy
      with:
        folder: dist
        bucket: ${{ secrets.S3_BUCKET }}
        bucket-region: 'ap-northeast-1'
        #dist-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        #invalidation: /
        delete-removed: true
        no-cache: true
        #private: true